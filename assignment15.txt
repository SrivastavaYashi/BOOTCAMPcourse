1. Write a function to find the greatest number from the given array of any size. (TSRS)
#include<stdio.h>
int greatestnum(int b[]);
int main()
{ int x;
  int arr[10]={8,9,4,2,0,7,22,19,10,3};
  x=greatestnum(arr); 
  printf("greatest number is %d",x);
}
int greatestnum(int b[])
{
  int i,j,t;
  for(j=0;j<=9;j++)
  for(i=0;i<=9;i++)
  if(b[j]<b[i])
  {
    t=b[j];
    b[j]=b[i];
    b[i]=t;
  }
  return b[9];
}

2. Write a function to find the smallest number from the given array of any size. (TSRS)
#include<stdio.h>
int smallestnum(int b[],int n);
int main()
{ 
  int x,n;
  printf("enter size of array=");
  scanf("%d",&n);
  int arr[n];
  x=smallestnum(arr,n); 
  printf("smallest number is %d",x);
}
int smallestnum(int b[],int n)
{
  int i,j,t;
  printf("enter %d numbers\n",n);
  for(i=0;i<n;i++)
  scanf("%d",&b[i]);

  for(j=0;j<n;j++)
  for(i=0;i<n;i++)
  if(b[j]<b[i])
  {
    t=b[j];
    b[j]=b[i];
    b[i]=t;
  }
  return b[0];
}

3. Write a function to sort an array of any size. (TSRN)
#include<stdio.h>
void sorting(int b[],int n);
int main()
{ 
  int x,n;
  printf("enter size of array=");
  scanf("%d",&n);
  int arr[n];
  sorting(arr,n);
}
void sorting(int b[],int n)
{
  int i,j,t;
  printf("enter %d numbers\n",n);
  for(i=0;i<n;i++)
  scanf("%d",&b[i]);

  for(j=0;j<n;j++)
  for(i=0;i<n;i++)
  if(b[j]<b[i])
  {
    t=b[j];
    b[j]=b[i];
    b[i]=t;
  }
  printf("sorted array is\n");
  for(i=0;i<n;i++)
  printf("%d ",b[i]);
}

4. Write a function to rotate an array by n position in d direction. The d is an indicative
value for left or right. (For example, if array of size 5 is [32, 29, 40, 12, 70]; n is 2 and
d is left, then the resulting array after left rotation 2 times is [40, 12, 70, 32, 29] )
#include<stdio.h>
void rotate(int z[],int size);
int main()
{
  int n;
  printf("enter size of array=");
  scanf("%d",&n);
  int a[n];
  printf("enter %d numbers\n",n);
  for(int i=0;i<n;i++)
  scanf("%d",&a[i]);
  printf("for left direction enter 0 and for right 1::\n\n");
  rotate(a,n);
}
void rotate(int z[],int size)
{
    int n,t=0,r,d;
    printf("enter value and direction to rotate array by n positions and direction=");
    scanf("%d%d",&n,&d);
    r=n;
    if(d==0)
    {
    while(r!=0)
    {
      t=z[0];
      for(int i=0;i<size-1;i++)
      z[i]=z[i+1];
      z[size-1]=t;
      r--;
    }
    }
    else
     while(r!=0)
    {
      t=z[size-1];
      for(int i=size-1;i>0;i--)
      z[i]=z[i-1];
      z[0]=t;
      r--;
    }
    printf("rotated array by %d positions\n",n);
    for(int i=0;i<size;i++)
    printf("%d ",z[i]);

}

5. Write a function to find the first occurrence of adjacent duplicate values in the array.
Function has to return the value of the element.
#include<stdio.h>
int duplicate(int brr[]);
int main()
{   
    int x;
    int arr[10];
    x=duplicate(arr);
    printf("first occurence of adjacent duplicate value is %d",x);
}
int duplicate(int brr[])
{   
    printf("Enter 10 numbers\n");
    for(int i=0;i<=9;i++)
    scanf("%d",&brr[i]);
    for(int i=0;i<=9;i++)
    if(brr[i]==brr[i+1])
    return brr[i];
}

6. Write a function in C to read n number of values in an array and display it in reverse
order.
#include<stdio.h>
void reverseArray();
int main()
{
    int n;
    printf("enter size of array=");
    scanf("%d",&n);
    int a[n];
    reverseArray(a,n);
}
void reverseArray(int b[],int N)
{
    printf("enter %d numbers\n",N);
    for(int i=0;i<N;i++)
    scanf("%d",&b[i]);
    printf("array in reverse order is\n");
    for(int i=N-1;i>=0;i--)
    printf("%d ",b[i]);
}

7. Write a function in C to count a total number of duplicate elements in an array.
#include<stdio.h>
int duplicate(int brr[]);
int main()
{   
    int x;
    int arr[10];
    x=duplicate(arr);
    printf("number of duplicate values are %d",x);
}
int duplicate(int brr[])
{   int count=0;
    printf("Enter 10 numbers\n");
    for(int i=0;i<=9;i++)
    scanf("%d",&brr[i]);
    for(int j=0;j<=9;j++)
    for(int i=j+1;i<=9;i++)
    if(brr[j]==brr[i])
    count++;

    return count;
}

8. Write a function in C to print all unique elements in an array.
#include<stdio.h>
void unique(int brr[]);
int main()
{   
    int arr[6]={1,2,3,4,2,1};
    unique(arr);
}
void unique(int brr[])
{   
    int m;
    for(int j=0;j<=5;j++)
 {  m=0;
    for(int i=j+1;i<=5;i++)
    if(brr[j]==brr[i])
    m=brr[j];
    for(int k=0;k<=5;k++)
    if(m==brr[k])
    brr[k]=0;
 }
    printf("unique values in array are\n");
    for(int i=0;i<=5;i++)
    if(brr[i]!=0)
    printf("%d ",brr[i]);   
}

9. Write a function in C to merge two arrays of the same size sorted in descending
order.
#include<stdio.h>
void sorting(int z[]);
int main()
{
   int a[5]={2,3,9,8,4};
   int b[5]={1,0,10,14,6};
   int k[10],j=0,m=0,i;
   while(j<5)
  { for(int i=0;i<5;i++)
    {
      k[i]=a[j];
      j++;
    }
  }
   while(m<5)
  { for(int i=5;i<10;i++)
    { k[i]=b[m];
    m++;
    }
  }
   sorting(k);
}
void sorting(int z[])
{  
  int t;
  for(int i=0;i<10;i++)
  for(int j=0;j<10;j++)
  if(z[i]>z[j])
  {
    t=z[i];
    z[i]=z[j];
    z[j]=t;
  }
   for(int i=0;i<10;i++)
   printf("%d ",z[i]);
}

10. Write a function in C to count the frequency of each element of an array.
#include<stdio.h>
void frequency(int z[]);
int main()
{
  int a[10]={1,3,4,5,1,3,9,2,8};
  frequency(a);
}
void frequency(int z[])
{
    int x[10]={0,0,0,0,0,0,0,0,0,0};
    for(int i=0;i<10;i++)
    for(int j=0;j<10;j++)
    if(z[i]==j)
    x[j]++;

    for(int j=0;j<10;j++)
    printf("frequency of %d is %d\n",j,x[j]);

}